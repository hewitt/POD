#+TITLE: Process On Demand
#+AUTHOR: Rich Hewitt
#+EMAIL: richard.hewitt@manchester.ac.uk
#+STARTUP: indent
#+PROPERTY: header-args :results silent

This is a simple elisp package to run a named shell process on demand
via a definable hook from within =Emacs=. The process is stopped by a
timeout condition linked to a predicate function.

* Use case

My email comes via O365 and requires MFA. This is painful to deal with
directly in my choice of mail agent (=mu4e=). Instead I make use of a
separate package =davmail= (https://davmail.sourceforge.net/), which
acts as an intermediary to deal with all the Microsoft requirements,
leaving a simple =localhost= server for SMTP, IMAP, etc to which any
mail client can then connect to.

Of course one can leave =davmail= running all the time, but instead I
prefer to start/stop the server dynamically using this 'Process On
Demand' approach.

Whenever I start =mu4e= a hook starts the =davmail= process. Then the
process is silently stopped via a timer, but only once =mu4e= is no
longer running.

When exiting =emacs=, any processes that have not already been stopped
by the timer will be silently killed with no user interaction.

* Customisation

- =pod-process-plist= is a plist of plists in the format

  ( PROCESS-KEY1 ( :NAME "process name"
                   :EXE "process executable location"
                   :ARGS "arguments passed to the executable"
                   :MINS "timer is run over this period"
                   :PRED "an elisp function that returns nil when the process can be stopped" )
    PROCESS-KEY2 ( ... )
    ... )

- =PROCESS-KEY?= should be a unique identifier for each process.
  
* Use-package

Example =use-package= configuration is below. This will start
=davmail= with the =-server= argument via a hook when =mu4e= is run.
The =davmail= process will continue to run for as long as =mu4e= is
running, as determined by =mu4e-running-p=. On exiting =mu4e= the
=davmail= process will be stopped by the timer that runs every 2
minutes.

#+BEGIN_SRC emacs-lisp :tangle yes
  (use-package pod
    :load-path "~/.emacs.d/elisp/pod"
    :config
    (setq pod-process-plist '(davmail (:name "dav"
                                             :exe  "~/.nix-profile/bin/davmail"
                                             :args "-server"
                                             :mins 2
                                             :pred mu4e-running-p)))
    :hook
    (mu4e-main-mode . (lambda() (pod-process-start 'davmail))) 
    )
#+END_SRC

